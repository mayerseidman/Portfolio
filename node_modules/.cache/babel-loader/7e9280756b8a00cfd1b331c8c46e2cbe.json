{"ast":null,"code":"var _jsxFileName = \"/Users/mayerseidman/Desktop/Projects/personal-site/src/WebcamCapture.js\";\nimport React, { Component } from \"react\";\nimport Webcam from \"react-webcam\";\nexport default class WebcamCapture extends React.Component {\n  // setRef()webcam => {\n  //   this.webcam = Webcam;\n  // };\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageSrc: \"\"\n    };\n  }\n\n  capture() {\n    const imageSrc = this.refs.web.getScreenshot();\n    this.setState({\n      imageSrc: imageSrc\n    });\n    this.props.setImage(imageSrc);\n  }\n\n  setDefaultImage() {\n    var imageSrc = \"https://imgplaceholder.com/420x320/cccccc/000/glyphicon-user\";\n    this.props.setImage(imageSrc);\n  }\n\n  render() {\n    const videoConstraints = {\n      width: 720,\n      height: 720,\n      facingMode: \"user\"\n    };\n\n    if (this.state.imageSrc) {\n      var display = \"\";\n    } else {\n      var display = React.createElement(\"div\", {\n        className: \"innerWebcamContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Smile and take a pic for your chatbot icon (this will not be saved)!\"), React.createElement(Webcam, {\n        audio: false,\n        height: 350,\n        ref: \"web\",\n        screenshotFormat: \"image/jpeg\",\n        width: 350,\n        videoConstraints: videoConstraints,\n        className: \"video\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.capture.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Capture photo\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: this.setDefaultImage.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"I'd rather not\")));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"webcamContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, display);\n  }\n\n}","map":{"version":3,"sources":["/Users/mayerseidman/Desktop/Projects/personal-site/src/WebcamCapture.js"],"names":["React","Component","Webcam","WebcamCapture","constructor","props","state","imageSrc","capture","refs","web","getScreenshot","setState","setImage","setDefaultImage","render","videoConstraints","width","height","facingMode","display","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,eAAe,MAAMC,aAAN,SAA4BH,KAAK,CAACC,SAAlC,CAA4C;AACzD;AACA;AACA;AAEAG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACH;;AAEDC,EAAAA,OAAO,GAAG;AACR,UAAMD,QAAQ,GAAG,KAAKE,IAAL,CAAUC,GAAV,CAAcC,aAAd,EAAjB;AACA,SAAKC,QAAL,CAAc;AAAEL,MAAAA,QAAQ,EAAEA;AAAZ,KAAd;AACA,SAAKF,KAAL,CAAWQ,QAAX,CAAoBN,QAApB;AACD;;AAEDO,EAAAA,eAAe,GAAG;AAChB,QAAIP,QAAQ,GAAI,8DAAhB;AACA,SAAKF,KAAL,CAAWQ,QAAX,CAAoBN,QAApB;AACD;;AAECQ,EAAAA,MAAM,GAAG;AACL,UAAMC,gBAAgB,GAAG;AACvBC,MAAAA,KAAK,EAAE,GADgB;AAEvBC,MAAAA,MAAM,EAAE,GAFe;AAGvBC,MAAAA,UAAU,EAAE;AAHW,KAAzB;;AAMA,QAAI,KAAKb,KAAL,CAAWC,QAAf,EAAyB;AACrB,UAAIa,OAAO,GAAG,EAAd;AACH,KAFD,MAEO;AACH,UAAIA,OAAO,GACP;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFADJ,EAEI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAE,KADX;AAEI,QAAA,MAAM,EAAE,GAFZ;AAGI,QAAA,GAAG,EAAC,KAHR;AAII,QAAA,gBAAgB,EAAC,YAJrB;AAKI,QAAA,KAAK,EAAE,GALX;AAMI,QAAA,gBAAgB,EAAEJ,gBANtB;AAOI,QAAA,SAAS,EAAC,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAWI;AAAQ,QAAA,OAAO,EAAG,KAAKR,OAAL,CAAaa,IAAb,CAAkB,IAAlB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAG,QAAA,OAAO,EAAG,KAAKP,eAAL,CAAqBO,IAArB,CAA0B,IAA1B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAN,CAZJ,CADJ;AAgBH;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMD,OADN,CADJ;AAKH;;AAtDsD","sourcesContent":["import React, { Component } from \"react\";\nimport Webcam from \"react-webcam\";\n\nexport default class WebcamCapture extends React.Component {\n  // setRef()webcam => {\n  //   this.webcam = Webcam;\n  // };\n\n  constructor(props) {\n      super(props)\n      this.state = { imageSrc: \"\" }\n  }\n \n  capture() {\n    const imageSrc = this.refs.web.getScreenshot();\n    this.setState({ imageSrc: imageSrc })\n    this.props.setImage(imageSrc);\n  };\n\n  setDefaultImage() {\n    var imageSrc =  \"https://imgplaceholder.com/420x320/cccccc/000/glyphicon-user\";\n    this.props.setImage(imageSrc);\n  }\n \n    render() {\n        const videoConstraints = {\n          width: 720,\n          height: 720,\n          facingMode: \"user\"\n        };\n\n        if (this.state.imageSrc) {\n            var display = \"\"\n        } else {\n            var display = (\n                <div className=\"innerWebcamContainer\">\n                    <p>Smile and take a pic for your chatbot icon (this will not be saved)!</p>\n                    <Webcam\n                        audio={false}\n                        height={350}\n                        ref=\"web\"\n                        screenshotFormat=\"image/jpeg\"\n                        width={350}\n                        videoConstraints={videoConstraints}\n                        className=\"video\"\n                    />\n                    <button onClick={ this.capture.bind(this) }>Capture photo</button>\n                    <span><a onClick={ this.setDefaultImage.bind(this) }>I'd rather not</a></span>\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"webcamContainer\">\n                { display }\n            </div>\n        );  \n    }\n}  "]},"metadata":{},"sourceType":"module"}