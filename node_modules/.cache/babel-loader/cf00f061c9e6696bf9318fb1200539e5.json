{"ast":null,"code":"var _jsxFileName = \"/Users/mayerseidman/Desktop/Projects/personal-site/src/LeftContainer.js\";\nimport React from 'react'; // import './leftContainer.scss';\n\nimport './App.scss';\nimport { withRouter } from \"react-router\";\n\nclass leftContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wordValue: \"Designer\",\n      currentCount: 10\n    };\n  }\n\n  getChangedText() {\n    var words = [\"neat\", \"great\", \"best\", \"groovy\"];\n    i = (i + 1) % words.length;\n    return words[i];\n  }\n\n  changeText() {\n    var text = this.getChangedText();\n    console.log(text);\n    this.setState({\n      wordValue: text\n    });\n  }\n\n  componentDidMount() {\n    var intervalIdTimer = setInterval(this.timer.bind(this), 1000);\n    var intervalIdScrambler = setInterval(this.changeText.bind(this), 1000);\n    this.setState({\n      intervalIdTimer: intervalIdTimer,\n      intervalIdScrambler: intervalIdScrambler\n    });\n  }\n\n  componentWillUnmount() {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalIdTimer);\n  }\n\n  timer() {\n    // setState method is used to update the state\n    var newCount = this.state.currentCount - 1;\n\n    if (newCount >= 0) {\n      this.setState({\n        currentCount: newCount\n      });\n    } else {\n      clearInterval(this.state.intervalIdTimer);\n      clearInterval(this.state.intervalIdScrambler);\n    }\n  }\n\n  render() {\n    if (this.state.currentCount == 0) {\n      var title = \"UI UX Designer\";\n    } else {\n      var title = this.state.wordValue;\n    }\n\n    let _this$props = this.props,\n        match = _this$props.match,\n        location = _this$props.location,\n        history = _this$props.history;\n    var path = location.pathname;\n\n    if (path == \"/works/one\") {\n      var infoContainer = React.createElement(\"div\", {\n        className: \"infoContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Case study stuff\");\n    } else {\n      var infoContainer = React.createElement(\"div\", {\n        className: \"infoContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Mayer Seidman\"), React.createElement(\"span\", {\n        className: \"circleDivider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, title));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"leftContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, infoContainer);\n  }\n\n}\n\nvar i = 0;\nexport default withRouter(leftContainer);","map":{"version":3,"sources":["/Users/mayerseidman/Desktop/Projects/personal-site/src/LeftContainer.js"],"names":["React","withRouter","leftContainer","Component","constructor","props","state","wordValue","currentCount","getChangedText","words","i","length","changeText","text","console","log","setState","componentDidMount","intervalIdTimer","setInterval","timer","bind","intervalIdScrambler","componentWillUnmount","clearInterval","newCount","render","title","match","location","history","path","pathname","infoContainer"],"mappings":"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","sourcesContent":["import React from 'react'\n// import './leftContainer.scss';\nimport './App.scss';\nimport { withRouter } from \"react-router\";\n\nclass leftContainer extends React.Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = { wordValue: \"Designer\", currentCount: 10 };\n\t}\n\n\tgetChangedText() {\n\t\tvar words = [\"neat\", \"great\", \"best\", \"groovy\"];\n\t    i = (i + 1) % words.length;\n\t    return words[i];\n\t}\n\tchangeText() {\n\t    var text = this.getChangedText();\n\t    console.log(text);\n\t    this.setState({ wordValue: text })\n\t}\n\n\tcomponentDidMount() {\n\t\tvar intervalIdTimer = setInterval(this.timer.bind(this), 1000);\n\t\tvar intervalIdScrambler = setInterval(this.changeText.bind(this), 1000);\n\t\tthis.setState({ intervalIdTimer: intervalIdTimer, intervalIdScrambler: intervalIdScrambler });\n\t}\n\n\tcomponentWillUnmount() {\n\t   // use intervalId from the state to clear the interval\n\t   clearInterval(this.state.intervalIdTimer);\n\t}\n\n\ttimer() {\n\t   // setState method is used to update the state\n\t\tvar newCount = this.state.currentCount - 1;\n\t\tif(newCount >= 0) { \n\t\t  this.setState({ currentCount: newCount });\n\t\t} else {\n\t\t  clearInterval(this.state.intervalIdTimer);\n\t\t  clearInterval(this.state.intervalIdScrambler)\n\t\t}\n\t}\n    render() {\n    \tif (this.state.currentCount == 0) {\n    \t\tvar title = \"UI UX Designer\";\n    \t} else {\n    \t\tvar title = this.state.wordValue\n    \t}\n    \tlet { match, location, history } = this.props;\n    \tvar path = location.pathname;\n    \tif (path == \"/works/one\") {\n    \t\tvar infoContainer = (\n    \t\t\t<div className=\"infoContainer\">Case study stuff</div>\n    \t\t)\n    \t} else {\n    \t\tvar infoContainer = (\n    \t\t\t<div className=\"infoContainer\">\n    \t\t\t\t<p className=\"name\">Mayer Seidman</p>\n    \t\t\t\t<span className=\"circleDivider\"></span>\n    \t\t\t\t<p className=\"title\">{ title }</p>\n    \t\t\t</div>\t\n    \t\t)\n    \t}\n    \treturn (\n    \t\t<div className=\"leftContainer\">\n    \t\t\t{ infoContainer }\n    \t\t</div>\n    \t)\n    }\n}\n\nvar i = 0;\n\nexport default withRouter(leftContainer)"]},"metadata":{},"sourceType":"module"}