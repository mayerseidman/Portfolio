{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar MessageProcessor = function () {\n  function MessageProcessor(onProcessed) {\n    _classCallCheck(this, MessageProcessor);\n\n    this.onProcessed = onProcessed;\n    this._timeoutId = null;\n    this._queue = [];\n    this._processed = this._processed.bind(this);\n  }\n\n  MessageProcessor.prototype.process = function process(object) {\n    if (!object || !(object instanceof Object) || !(object.content instanceof Object) || !(object.content.text instanceof String || typeof object.content.text === 'string')) return false;\n\n    this._queue.push(object);\n\n    this._processNext();\n\n    return true;\n  };\n\n  MessageProcessor.prototype.reset = function reset() {\n    clearTimeout(this._timeoutId);\n    this._timeoutId = null;\n    this._queue = [];\n  };\n\n  MessageProcessor.prototype._processNext = function _processNext() {\n    if (this.isProcessing || !this._queue.length) return;\n    this._timeoutId = setTimeout(this._processed, MessageProcessor.typingSpeed(this._queue[0].content.text));\n  };\n\n  MessageProcessor.prototype._processed = function _processed() {\n    var message = this._queue.shift();\n\n    clearTimeout(this._timeoutId);\n    this._timeoutId = null;\n\n    this._processNext();\n\n    this.onProcessed(message);\n  };\n\n  MessageProcessor.typingSpeed = function typingSpeed(text) {\n    if (!text || Object.prototype.toString.call(text) !== \"[object String]\") return 0;\n    return Math.min(Math.max(text.length * MessageProcessor.minTypingSpeed / 10, MessageProcessor.minTypingSpeed), MessageProcessor.maxTypingSpeed);\n  };\n\n  _createClass(MessageProcessor, [{\n    key: \"isProcessing\",\n    get: function get() {\n      return this._timeoutId !== null;\n    }\n  }], [{\n    key: \"minTypingSpeed\",\n    get: function get() {\n      return 1000;\n    }\n  }, {\n    key: \"maxTypingSpeed\",\n    get: function get() {\n      return 3000;\n    }\n  }]);\n\n  return MessageProcessor;\n}();\n\nexport default MessageProcessor;","map":null,"metadata":{},"sourceType":"module"}