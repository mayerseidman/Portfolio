{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Button = function (_Component) {\n  _inherits(Button, _Component);\n\n  function Button(props) {\n    _classCallCheck(this, Button);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this._handleClick = _this._handleClick.bind(_this);\n    _this.buttonClassName = '';\n    return _this;\n  }\n\n  Button.prototype.render = function render() {\n    return React.createElement('button', {\n      className: this.buttonClassName,\n      onClick: this._handleClick\n    }, this.props.title);\n  };\n\n  Button.prototype._handleClick = function _handleClick(e) {\n    e.preventDefault();\n    this.props.onAction(this.props.title, this.props.callback);\n  };\n\n  return Button;\n}(Component);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  title: PropTypes.string.isRequired,\n  callback: PropTypes.func,\n  onAction: PropTypes.func.isRequired\n} : {};\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}