{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar ChatBotUtil = function () {\n  function ChatBotUtil() {\n    _classCallCheck(this, ChatBotUtil);\n  }\n  /**\n   * Creates a text message object with `text` and `actions`. Use `ChatBotUtil` methods to create actions.\n   *\n   * @type Function(text: String, actions: [Objects]) -> Object\n   */\n\n\n  ChatBotUtil.textMessage = function textMessage(text) {\n    for (var _len = arguments.length, actions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      actions[_key - 1] = arguments[_key];\n    }\n\n    return {\n      type: 'text',\n      isInbound: false,\n      content: {\n        text: text\n      },\n      actions: actions\n    };\n  };\n  /**\n   * Creates a user's text message object with `text`.\n   * Used internally in `ChatBot` to add user's reply to a chat.\n   *\n   * @type Function(text: String) -> Object\n   */\n\n\n  ChatBotUtil.userTextMessage = function userTextMessage(text) {\n    return {\n      type: 'text',\n      isInbound: true,\n      content: {\n        text: text\n      }\n    };\n  };\n  /**\n   * Creates a get started button with a text (title).\n   *\n   * @type Function(text: String) -> Object\n   */\n\n\n  ChatBotUtil.makeGetStartedButton = function makeGetStartedButton(text) {\n    return {\n      title: text,\n      type: 'get-started'\n    };\n  };\n  /**\n   * Creates a reply button with `text` and `callback` that is called when a user pressed the corresponding button.\n   *\n   * @type Function(text: String, callback: () -> [Object]) -> Object\n   */\n\n\n  ChatBotUtil.makeReplyButton = function makeReplyButton(text, callback) {\n    return {\n      title: text,\n      callback: callback,\n      type: 'quick-reply'\n    };\n  };\n  /**\n   * Creates a text input field with `text` (submit button title), `placeholder` and `callback` that is called when user submits a result from a text field.\n   *\n   * @type Function(submit: String, placeholder: String, callback: () -> [Object]) -> Object\n   */\n\n\n  ChatBotUtil.makeTextInputField = function makeTextInputField(submit, placeholder, callback) {\n    return {\n      submit: submit,\n      placeholder: placeholder,\n      callback: callback,\n      type: 'text-input'\n    };\n  };\n\n  return ChatBotUtil;\n}();\n\nArray.prototype.any = function () {\n  return this[Math.floor(Math.random() * this.length)];\n};\n\nexport default ChatBotUtil;","map":null,"metadata":{},"sourceType":"module"}