{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Scroll from 'react-scroll';\nimport { TransitionGroup } from 'react-transition-group';\nimport Animatable from './../Animatable';\nimport Message from './message/Message';\nvar Element = Scroll.Element;\nvar Scroller = Scroll.scroller;\n\nvar Messages = function (_Component) {\n  _inherits(Messages, _Component);\n\n  function Messages() {\n    _classCallCheck(this, Messages);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Messages.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.messages.length === prevProps.messages.length + 1 || this.props.isTyping !== prevProps.isTyping) {\n      if (process.env.MESSAGE_SCROLL_DISABLED !== true) {\n        // Is set in tests. `react-scroll` has an issue with execution when run in tests.\n        Scroller.scrollTo('LastMessage', {\n          duration: 500,\n          smooth: true,\n          containerId: 'Messages'\n        });\n      }\n    }\n  };\n\n  Messages.prototype.render = function render() {\n    var messages = this.props.messages.map(function (message, i) {\n      return React.createElement(Animatable, {\n        classNames: 'Messages',\n        key: i\n      }, React.createElement(Message, message));\n    });\n    var lastMessage = React.createElement(Element, {\n      name: 'LastMessage'\n    });\n    return React.createElement(TransitionGroup, {\n      component: 'ul',\n      className: 'Messages',\n      id: 'Messages'\n    }, messages, lastMessage);\n  };\n\n  return Messages;\n}(Component);\n\nMessages.defaultProps = {\n  messages: []\n};\nMessages.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired\n} : {};\nexport default Messages;","map":null,"metadata":{},"sourceType":"module"}