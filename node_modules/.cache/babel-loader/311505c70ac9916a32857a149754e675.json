{"ast":null,"code":"var _jsxFileName = \"/Users/mayerseidman/Desktop/Projects/personal-site/src/LeftContainer.js\";\nimport React from 'react'; // import './leftContainer.scss';\n\nimport './App.scss';\nimport { withRouter } from \"react-router\"; // Is there a way to access like this -- this.interval - dont use state?\n\nclass leftContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wordValue: \"Designer\",\n      currentCount: 10,\n      minimized: false\n    };\n  }\n\n  getChangedText() {\n    var words = [\"neat\", \"great\", \"best\", \"groovy\"];\n    i = (i + 1) % words.length;\n    return words[i];\n  }\n\n  changeText() {\n    var text = this.getChangedText();\n    this.setState({\n      wordValue: text\n    });\n  }\n\n  componentDidMount() {\n    var intervalIdTimer = setInterval(this.timer.bind(this), 1000);\n    var intervalIdScrambler = setInterval(this.changeText.bind(this), 1000);\n    this.setState({\n      intervalIdTimer: intervalIdTimer,\n      intervalIdScrambler: intervalIdScrambler\n    });\n    let _this$props = this.props,\n        match = _this$props.match,\n        location = _this$props.location,\n        history = _this$props.history;\n    var path = location.pathname;\n\n    if (path == \"/works/one\") {\n      this.setState({\n        minimized: true\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalIdTimer);\n  }\n\n  timer() {\n    // setState method is used to update the state\n    var newCount = this.state.currentCount - 1;\n\n    if (newCount >= 0) {\n      this.setState({\n        currentCount: newCount\n      });\n    } else {\n      clearInterval(this.state.intervalIdTimer);\n      clearInterval(this.state.intervalIdScrambler);\n    }\n  }\n\n  render() {\n    if (this.state.currentCount == 0) {\n      var title = \"UI UX Designer\";\n    } else {\n      var title = this.state.wordValue;\n    }\n\n    let _this$props2 = this.props,\n        match = _this$props2.match,\n        location = _this$props2.location,\n        history = _this$props2.history;\n    var path = location.pathname;\n\n    if (path.includes(\"StudyOne\")) {\n      if (this.props.currentView == \"preview\") {\n        var className = \"minimize\";\n        var previewTopClassName = \"previewTop\";\n        var infoContainer = React.createElement(\"div\", {\n          className: \"infoContainer preview \" + previewTopClassName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Reading Comprehension Tool\"), React.createElement(\"span\", {\n          className: \"circleDivider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"studyPreviewText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Led team in creating several interfaces from scratch, carrying them through the various stages of UX design.\"), React.createElement(\"span\", {\n          className: \"circleDivider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"studyRolesText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Research, UI/UX, Visual, User Feedback\"));\n      } else if (this.props.currentView == \"startStudy\") {\n        var className = \"exterminate\";\n        var infoContainer = React.createElement(\"div\", {\n          className: \"infoContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Title goes here...\")));\n      }\n    } else if (path.includes(\"StudyTwo\")) {\n      if (this.props.currentView == \"preview\") {\n        var className = \"minimize\";\n        var previewTopClassName = \"previewTop\";\n        var infoContainer = React.createElement(\"div\", {\n          className: \"infoContainer preview \" + previewTopClassName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Student Roster Design\"), React.createElement(\"span\", {\n          className: \"circleDivider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"studyPreviewText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Created a new interface to handle batch processing for teachers and their students.\"), React.createElement(\"span\", {\n          className: \"circleDivider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"studyRolesText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Research, UI/UX, Visual\"));\n      } else if (this.props.currentView == \"startStudy\") {\n        var className = \"exterminate\";\n        var infoContainer = React.createElement(\"div\", {\n          className: \"infoContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Title goes here...\")));\n      }\n    } else if (path.includes(\"StudyThree\")) {\n      if (this.props.currentView == \"preview\") {\n        var className = \"minimize\";\n        var previewTopClassName = \"previewTop\";\n        var infoContainer = React.createElement(\"div\", {\n          className: \"infoContainer preview \" + previewTopClassName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Avatars \", React.createElement(\"span\", {\n          className: \"andText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"and\"), \" E-Commerce Design\"), React.createElement(\"span\", {\n          className: \"circleDivider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"studyPreviewText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Re-designed a fun shop for a better user experience.\"), React.createElement(\"span\", {\n          className: \"circleDivider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"studyRolesText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Research, UI/UX, Visual\"));\n      } else if (this.props.currentView == \"startStudy\") {\n        var className = \"exterminate\";\n        var infoContainer = React.createElement(\"div\", {\n          className: \"infoContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Title goes here...\")));\n      }\n    } else {\n      var infoContainer = React.createElement(\"div\", {\n        className: \"infoContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Mayer Seidman\"), React.createElement(\"span\", {\n        className: \"circleDivider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, title));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"leftContainer fadeInLeft \" + className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, infoContainer);\n  }\n\n}\n\nvar i = 0;\nexport default withRouter(leftContainer);","map":{"version":3,"sources":["/Users/mayerseidman/Desktop/Projects/personal-site/src/LeftContainer.js"],"names":["React","withRouter","leftContainer","Component","constructor","props","state","wordValue","currentCount","minimized","getChangedText","words","i","length","changeText","text","setState","componentDidMount","intervalIdTimer","setInterval","timer","bind","intervalIdScrambler","match","location","history","path","pathname","componentWillUnmount","clearInterval","newCount","render","title","includes","currentView","className","previewTopClassName","infoContainer"],"mappings":"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","sourcesContent":["import React from 'react'\n// import './leftContainer.scss';\nimport './App.scss';\nimport { withRouter } from \"react-router\";\n\n// Is there a way to access like this -- this.interval - dont use state?\n\nclass leftContainer extends React.Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = { wordValue: \"Designer\", currentCount: 10, minimized: false };\n\t}\n\n\tgetChangedText() {\n\t\tvar words = [\"neat\", \"great\", \"best\", \"groovy\"];\n\t    i = (i + 1) % words.length;\n\t    return words[i];\n\t}\n\tchangeText() {\n\t    var text = this.getChangedText();\n\t    this.setState({ wordValue: text })\n\t}\n\n\tcomponentDidMount() {\n\t\tvar intervalIdTimer = setInterval(this.timer.bind(this), 1000);\n\t\tvar intervalIdScrambler = setInterval(this.changeText.bind(this), 1000);\n\t\tthis.setState({ intervalIdTimer: intervalIdTimer, intervalIdScrambler: intervalIdScrambler });\n\n\t\tlet { match, location, history } = this.props;\n\t\tvar path = location.pathname;\n\t\tif (path == \"/works/one\") {\n\t\t\tthis.setState({ minimized: true })\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t   // use intervalId from the state to clear the interval\n\t   clearInterval(this.state.intervalIdTimer);\n\t}\n\n\ttimer() {\n\t   // setState method is used to update the state\n\t\tvar newCount = this.state.currentCount - 1;\n\t\tif(newCount >= 0) { \n\t\t  this.setState({ currentCount: newCount });\n\t\t} else {\n\t\t  clearInterval(this.state.intervalIdTimer);\n\t\t  clearInterval(this.state.intervalIdScrambler)\n\t\t}\n\t}\n    render() {\n    \tif (this.state.currentCount == 0) {\n    \t\tvar title = \"UI UX Designer\";\n    \t} else {\n    \t\tvar title = this.state.wordValue\n    \t}\n    \tlet { match, location, history } = this.props;\n    \tvar path = location.pathname;\n    \tif (path.includes(\"StudyOne\")) {\n    \t\tif (this.props.currentView == \"preview\") {\n    \t\t\tvar className = \"minimize\"\n    \t\t\tvar previewTopClassName = \"previewTop\"\n    \t\t\tvar infoContainer = (\n    \t\t\t\t<div className={ \"infoContainer preview \" + previewTopClassName }>\n    \t\t\t    \t<p className=\"title\">Reading Comprehension Tool</p>\n    \t\t\t        <span className=\"circleDivider\"></span>\n    \t\t\t        <p className=\"studyPreviewText\">Led team in creating several interfaces from scratch, carrying them through the various stages of UX design.</p>\n    \t\t\t        <span className=\"circleDivider\"></span>\n    \t\t\t        <p className=\"studyRolesText\">Research, UI/UX, Visual, User Feedback</p>\n    \t\t\t\t</div>\n    \t\t\t)\t\n    \t\t} else if (this.props.currentView == \"startStudy\") {\n    \t\t\tvar className = \"exterminate\"\n    \t\t\tvar infoContainer = (\n    \t\t\t\t<div className=\"infoContainer\">\n    \t\t\t\t    <div>\n    \t\t\t\t    \t<p className=\"title\">Title goes here...</p>\n    \t\t\t\t    </div>\n    \t\t\t\t</div>\n    \t\t\t)\n    \t\t}\n    \t} else if (path.includes(\"StudyTwo\")) {\n\t\t\tif (this.props.currentView == \"preview\") {\n\t\t\t\tvar className = \"minimize\"\n\t\t\t\tvar previewTopClassName = \"previewTop\"\n\t\t\t\tvar infoContainer = (\n\t\t\t\t\t<div className={ \"infoContainer preview \" + previewTopClassName }>\n\t\t\t\t    \t<p className=\"title\">Student Roster Design</p>\n\t\t\t\t        <span className=\"circleDivider\"></span>\n\t\t\t\t        <p className=\"studyPreviewText\">Created a new interface to handle batch processing for teachers and their students.</p>\n\t\t\t\t        <span className=\"circleDivider\"></span>\n\t\t\t\t        <p className=\"studyRolesText\">Research, UI/UX, Visual</p>\n\t\t\t\t\t</div>\n\t\t\t\t)\t\n\t\t\t} else if (this.props.currentView == \"startStudy\") {\n\t\t\t\tvar className = \"exterminate\"\n\t\t\t\tvar infoContainer = (\n\t\t\t\t\t<div className=\"infoContainer\">\n\t\t\t\t\t    <div>\n\t\t\t\t\t    \t<p className=\"title\">Title goes here...</p>\n\t\t\t\t\t    </div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n    \t} else if (path.includes(\"StudyThree\")) {\n\t\t\tif (this.props.currentView == \"preview\") {\n\t\t\t\tvar className = \"minimize\"\n\t\t\t\tvar previewTopClassName = \"previewTop\"\n\t\t\t\tvar infoContainer = (\n\t\t\t\t\t<div className={ \"infoContainer preview \" + previewTopClassName }>\n\t\t\t\t    \t<p className=\"title\">Avatars <span className=\"andText\">and</span> E-Commerce Design</p>\n\t\t\t\t        <span className=\"circleDivider\"></span>\n\t\t\t\t        <p className=\"studyPreviewText\">Re-designed a fun shop for a better user experience.</p>\n\t\t\t\t        <span className=\"circleDivider\"></span>\n\t\t\t\t        <p className=\"studyRolesText\">Research, UI/UX, Visual</p>\n\t\t\t\t\t</div>\n\t\t\t\t)\t\n\t\t\t} else if (this.props.currentView == \"startStudy\") {\n\t\t\t\tvar className = \"exterminate\"\n\t\t\t\tvar infoContainer = (\n\t\t\t\t\t<div className=\"infoContainer\">\n\t\t\t\t\t    <div>\n\t\t\t\t\t    \t<p className=\"title\">Title goes here...</p>\n\t\t\t\t\t    </div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n    \t} else {\n    \t\tvar infoContainer = (\n    \t\t\t<div className=\"infoContainer\">\n    \t\t\t\t<p className=\"name\">Mayer Seidman</p>\n    \t\t\t\t<span className=\"circleDivider\"></span>\n    \t\t\t\t<p className=\"title\">{ title }</p>\n    \t\t\t</div>\t\n    \t\t)\t\n    \t}\n    \treturn (\n    \t\t<div className={ \"leftContainer fadeInLeft \" + className }>\n    \t\t\t{ infoContainer }\n    \t\t</div>\n    \t)\n    }\n}\n\nvar i = 0;\n\nexport default withRouter(leftContainer)"]},"metadata":{},"sourceType":"module"}